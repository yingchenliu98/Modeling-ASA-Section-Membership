getwd()
source("na-convert.R")
full = read.csv('full_data.csv')
setwd("C:/Users/Blake Bullwinkel/Documents/Harvard/Spring 2021/STAT149/stat149_final_project/data")
full = read.csv('full_data.csv')
getwd()
full = read.csv('full_data.csv')
full$Gender = as.factor(full$Gender)
full$EmploymentCategory = as.factor(full$EmploymentCategory)
full$MEMTYPE = as.factor(full$MEMTYPE)
full$MEMTYPE_new = as.factor(full$MEMTYPE_new)
full = na.convert.mean(full)
smp_size <- floor(0.75 * nrow(full))
## set the seed to make your partition reproducible
set.seed(149)
train_ind <- sample(seq_len(nrow(full)), size = smp_size)
train <- full[train_ind, ]
test <- full[-train_ind, ]
full.gam1 = gam(AnySection ~ JSMtot + USA.CAN + DontPublish + MEMTYPE_new + s(Age) + s(AgeJoinedASA) + Gender + EmploymentCategory + InChapter + AgeJoinedASA.na + P.SEC.BE + P.SEC.BIOM + P.SEC.BIOP + P.SEC.CNSL + P.SEC.COMP + P.SEC.EDUC + P.SEC.ENVR + P.SEC.EPI + P.SEC.GOVT + P.SEC.GRPH + P.SEC.HPSS + P.SEC.MDD + P.SEC.MHS + P.SEC.MKTG + P.SEC.NPAR + P.SEC.QP + P.SEC.SBSS + P.SEC.SDNS + P.SEC.SGG + P.SEC.SI + P.SEC.SIS + P.SEC.SLDM + P.SEC.SOC + P.SEC.SPES + P.SEC.SRMS + P.SEC.SSPA + P.SEC.TSHS, family = binomial, data = full )
library(dplyr)
library(caret)
library(ggplot2)
library(tidyverse)
library (mgcv)
library(forcats)
full.gam1 = gam(AnySection ~ JSMtot + USA.CAN + DontPublish + MEMTYPE_new + s(Age) + s(AgeJoinedASA) + Gender + EmploymentCategory + InChapter + AgeJoinedASA.na + P.SEC.BE + P.SEC.BIOM + P.SEC.BIOP + P.SEC.CNSL + P.SEC.COMP + P.SEC.EDUC + P.SEC.ENVR + P.SEC.EPI + P.SEC.GOVT + P.SEC.GRPH + P.SEC.HPSS + P.SEC.MDD + P.SEC.MHS + P.SEC.MKTG + P.SEC.NPAR + P.SEC.QP + P.SEC.SBSS + P.SEC.SDNS + P.SEC.SGG + P.SEC.SI + P.SEC.SIS + P.SEC.SLDM + P.SEC.SOC + P.SEC.SPES + P.SEC.SRMS + P.SEC.SSPA + P.SEC.TSHS, family = binomial, data = full )
summary(full.gam1)
#REDUCED GAM model, using FINAL Predictors of GLM with interaction terms
gam2 = gam(AnySection ~ s(Age)+s(AgeJoinedASA)+Age.na+Gender+EmploymentCategory+JSMtot+USA.CAN+DontPublish+InChapter+MEMTYPE_new+P.SEC.BE+P.SEC.BIOM+P.SEC.BIOP+P.SEC.CNSL+P.SEC.COMP+P.SEC.EDUC+P.SEC.ENVR+P.SEC.EPI+P.SEC.GOVT+P.SEC.GRPH+P.SEC.HPSS+P.SEC.MDD+P.SEC.MHS+P.SEC.MKTG+P.SEC.NPAR+P.SEC.QP+P.SEC.SBSS+P.SEC.SDNS+P.SEC.SGG+P.SEC.SI+P.SEC.SIS+P.SEC.SLDM+P.SEC.SOC+P.SEC.SPES+P.SEC.SRMS+P.SEC.SSPA+P.SEC.TSHS+ ti(Age, EmploymentCategory, bs = 'fs') + ti(Age, JSMtot, bs = 'fs'), family=binomial, data=full)
member.finalglm = glm(AnySection ~ Age+AgeJoinedASA+Age.na+Gender+EmploymentCategory+JSMtot+USA.CAN+DontPublish+InChapter+MEMTYPE_new+P.SEC.BE+P.SEC.BIOM+P.SEC.BIOP+P.SEC.CNSL+P.SEC.COMP+P.SEC.EDUC+P.SEC.ENVR+P.SEC.EPI+P.SEC.GOVT+P.SEC.GRPH+P.SEC.HPSS+P.SEC.MDD+P.SEC.MHS+P.SEC.MKTG+P.SEC.NPAR+P.SEC.QP+P.SEC.SBSS+P.SEC.SDNS+P.SEC.SGG+P.SEC.SI+P.SEC.SIS+P.SEC.SLDM+P.SEC.SOC+P.SEC.SPES+P.SEC.SRMS+P.SEC.SSPA+P.SEC.TSHS+Age*EmploymentCategory+Age*JSMtot, family=binomial, data=full)
anova( member.finalglm, gam2, test='Chi')
#Plot GAM smooths
plot(gam2, rug=T, se=T, col="red")
plot(gam2, rug=T, se=T, col="red")
plot(gam2, rug=T, se=T, col="red")[:2]
plot(gam2, rug=T, se=T, col="red", which=1:2)
#Plot GAM smooths
png(file="gam-smooths.png",res=300)
par(mfrow=c(2,1))
plot(gam2, rug=T, se=T, col="red")
plot(gam2, rug=T, se=T, col="red")[1]
plot(gam2, rug=T, se=T, col="red")
library(ggplot2)
plot_smooths(model=gam2)
library(ggplot2)
theme_set(theme_bw())
library(dplyr)
library(mgcv)
library(tidymv
library(ggplot2)
theme_set(theme_bw())
library(dplyr)
library(mgcv)
library(tidymv)
install.packages("tidymv")
library(ggplot2)
theme_set(theme_bw())
library(dplyr)
library(mgcv)
library(tidymv)
plot_smooths(model=gam2)
plot_smooths(model=gam2, series=Age)
#Plot GAM smooths
plot(gam2, rug=T, se=T, col="red", main="GAM Smooth for Age")
#Plot GAM smooths
plot(gam2, rug=T, se=T, col="red", main="GAM Smooth for Age", shade=TRUE)
#Plot GAM smooths
plot(gam2, rug=T, se=T, col="red", main="GAM Smooth for Age")
#Plot GAM smooths
plot(gam2, residuals=T, rug=T, se=T, col="red", main="GAM Smooth for Age")
#Plot GAM smooths
plot(gam2, rug=T, se=T, col="red", main="GAM Smooth for Age")
#Plot GAM smooths
plot(gam2, rug=F, se=T, col="red", main="GAM Smooth for Age")
#Plot GAM smooths
par(pty='s',mfrow=c(2,1))
plot(gam2, rug=F, se=T, col="red", main="GAM Smooth for Age")
#Plot GAM smooths
png(file="gam-smooths.png",
width=11, height=8.5, units="in", res=300)
par(pty='s',mfrow=c(2,1))
plot(gam2, rug=F, se=T, col="red", main="GAM Smooth for Age")
dev.off()
#Plot GAM smooths
par(pty='s',mfrow=c(2,1))
plot(gam2, rug=F, se=T, col="red", main="GAM Smooth for Age")
#Plot GAM smooths
dev.new(width=11, height=8.5, unit="in")
par(pty='s',mfrow=c(2,1))
plot(gam2, rug=F, se=T, col="red", main="GAM Smooth for Age")
dev.off()
#Plot GAM smooths
plot(gam2, rug=F, se=T, col="red", main="GAM Smooth for Age")
#Plot GAM smooths
plot(gam2, rug=F, se=T, col="red", main="Fitted GAM Smooths")
#Plot GAM smooths
plot(gam2, rug=F, se=T, col="red", main="Fitted GAM Smooths", ylab="s(Age)")
#Plot GAM smooths
plot(gam2, rug=F, se=T, col="red", main="Fitted GAM Smooths", ylab="s(AgeJoinedASA)")
#Plot GAM smooths
plot(gam2, rug=F, se=T, col="red", main="Fitted GAM Smooths", ylab="s(Age)")
#Plot GAM smooths
plot(gam2, rug=F, se=T, col="red", main="GAM Smooth over Age", ylab="s(Age)")
